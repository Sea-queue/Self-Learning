Dynamic Programming:
An optimization over plain recursion. Wherever we see a recursive solution
that has repeated calls for same inputs, we can optimize it using DP. The idea
is to simply store the results of subproblems, so that we do not have to
re-compute them when needed later. This simple optimization reduces time
complexities from exponential to polynomial.

Memoization Recipe:
1. make it work.
    • visualiza the problem as a tree
    • implement the tree using recursion
    • test it

2. make it efficient.
    • add a memo object(hashMap(java) or Dictionary(python))
    • add a base case to return memo values
    • store return values into the memo before returning
