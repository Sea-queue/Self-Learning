What is Database (DB)?
----------------------
• any collection of related information
    > Shopping list
    > to do list
• stored in different ways
    > On paper
    > in mind
    > on a computer
$: computers are great for keeping track of LARGE AMOUNT of inforamtion


Two types of Databases:
------------------------
Relational Databases(SQL)   vs  Non-Relational Databases

Relational:
• Organize data into one or more tables:
    > Each table has columns and rows
    > A unique key identifies each row

Non-Relational:
• Anything but a traditional table
    > Graphs
    > Maps (key -value)
    > Documents


Relational Database Management System (RDBMS):
----------------------------------------------
• it's a software application
• use SQL to help users create and maintain a relational database:
    > mySQL
    > Oracal
    > mariaDB
    > postgreSQL


Structured Query Language (SQL):
--------------------------------
• standardized language for interacting with RDBMS
• C.R.U.D: Create, Read, Update, Delete

A hybrid language, it's actually 4 types of language in one
• Data Query Language(DQL):
    > query the database for information
    > get information that is already stored in database

• Data Definition Language(DDL):
    > define database schemes

• Data Control Language(DCL):
    > control access to the database
    > user permission management

• Data Manipulation Language(DML):
    > inserting, updating and deleting data


Non-relational Database Managemnet System (NRDBMS):
----------------------------------------------------
> mongoDB, dynamaDB

Implementation  specific:
-------------------------
There is no standard language. Mostly, each System has their own language.


Table Key:
----------
            surrogate key      vs   natural key:
no mapping to the real world   vs   has mapping to the real world
               "1, 2, 3 ..."   vs   "SSN"

foregin key: private key of another table
• could be stored as an element at the end of a table
• could be composite primary key of a table

composite key:
Two keys together uinique identify a row


Query:
------
Requests made to the database system for specific information
(a google search is query)

In other words: a set of instructions given to the RDBMS(written in SQL)
that tell the RDBMS what information you want.
    > TONS of data in a DB
    > Often hidden in a complex schema
    > Goal is only to get the data you need


After downloading mySQL:
------------------------
In Terminal:
mysql: command not found
echo 'export PATH=/usr/local/mysql/bin:$PATH' >> ~/.bash_profile
. ~/.bash_profile: reload       -- reload the bash_profile
mysql -u root -p                -- log in
create database <name>;         -- create a database
SHOW DATABSES;                  -- prints a list of databases
SHOW SCHEMAS;                   -- prints a list of databases


SQL basic:
----------
always ending with a ';'

INT                     -- whole numbers
DECIMAL(M, N)           -- (total digits, digits after decimal point)
VARCHAR(1)              -- string of text of length 1
BLOB                    -- binary large object, stores large data
DATE                    -- 'yyyy-mm-dd'
TIMESTAMP               -- 'yyyy-mm-dd hh:mm:ss'  used for recording

Example:
--------
CREATE TABLE student (
    student_id INT AUTO_INCREMENT,
    name VARCHAR(20) NOT NULL,
    major VARCHAR(20) DEFAULT 'undecided',
    PRIMARY KEY(student_id)
);

DESCRIBE student;           -- show table, column types
DROP TABLE student;         -- delete the table
SELECT * FROM student;      -- show all the elements

ALTER TABLE student ADD gpa DECIMAL(3, 2);
ALTER TABLE student DROP COLUMN gpa;

INSERT INTO student VALUES(1, 'Seaqueue', 'CS');
INSERT INTO(name, major) VALUES('Gina', 'Business');

UPDATE student SET major = 'Bio' WHERE major = 'Business';
update student set name = 'Tom' where name = 'Briany';
-- change everyone's major to 'undecided':
update student set major = 'undecided';

delete from student where student_id = 5;
delete from student where name = 'Briany';
-- delete everyone:
delete from student;

select * from student;
select name from student;
select student_id from student;
select major from student;
select student.name from student order by name;
select student.name from student order by name desc;
select * from student limit 1;
select * from student where major = 'CS';
select name from student where major = 'CS' or major = 'Business';
select * from student where major in ('CS', 'Business');
select * from student where major in ('CS', 'Business') and student_id > 3;

-- comparison: < , >, = , <=, >=, <>(not equal), AND, OR
select * from student  where name <= 'Diego' AND major = 'Business';
